"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[426],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(r),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var i=2;i<l;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3903:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var n=r(7462),a=(r(7294),r(3905));const l={},o="release-pr",p={unversionedId:"usage/release-pr",id:"usage/release-pr",title:"release-pr",description:"The release-plz release-pr command runs release-plz update and",source:"@site/docs/usage/release-pr.md",sourceDirName:"usage",slug:"/usage/release-pr",permalink:"/docs/usage/release-pr",draft:!1,editUrl:"https://github.com/MarcoIeni/release-plz/tree/main/website/docs/usage/release-pr.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update",permalink:"/docs/usage/update"},next:{title:"release",permalink:"/docs/usage/release"}},s={},i=[{value:"PR update",id:"pr-update",level:2},{value:"Gitea",id:"gitea",level:2}],c={toc:i},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"release-pr"},"release-pr"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"release-plz release-pr")," command runs ",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/update"},(0,a.kt)("inlineCode",{parentName:"a"},"release-plz update"))," and\nopens a GitHub Pull Request that prepares the next release."),(0,a.kt)("p",null,"When the project maintainer merges the release pull request, the packages are\nready to be published."),(0,a.kt)("p",null,"Here's an example of a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MarcoIeni/release-plz/pull/377"},"PR"),"\nopened by release-plz in the release-plz GitHub project itself."),(0,a.kt)("p",null,"In the following example, I run ",(0,a.kt)("inlineCode",{parentName:"p"},"release-plz")," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"release-plz")," project\nitself.\n",(0,a.kt)("inlineCode",{parentName:"p"},"Release-plz")," opens a PR that increases the version and the changelog of the\npackages with unpublished changes."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/11428655/160772903-544c7578-7c17-4311-b6ca-a1aefeabe799.gif",alt:"release-plz release-pr"})),(0,a.kt)("p",null,"To learn more, run ",(0,a.kt)("inlineCode",{parentName:"p"},"release-plz release-pr --help"),"."),(0,a.kt)("h2",{id:"pr-update"},"PR update"),(0,a.kt)("p",null,"If there's already an open release PR:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If the PR contains commits that are not from bots (except the first one),\nrelease-plz closes the PR to preserve the git history.\nThe update mechanism is simple: overwrite everything and force-push. \ud83d\udca5\nReasoning: changes done by bots are not valuable, so we can overwrite them.\n(Not available on Gitea)."),(0,a.kt)("li",{parentName:"ul"},"Otherwise, release-plz closes the old PR and opens a new one.\nThis is done to preserve the git history of maintainers' changes.\nRelease-plz also closes the release PR when it cannot update it\n(for example, the force-push fails due to merge conflicts).")),(0,a.kt)("h2",{id:"gitea"},"Gitea"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"release-plz release-pr")," also supports creating PRs for repositories hosted on\nGitea with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--backend")," flag:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"release-plz release-pr --token <gitea application token> --backend gitea")))}d.isMDXComponent=!0}}]);