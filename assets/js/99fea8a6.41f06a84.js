"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[361],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2855:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},i="release",o={unversionedId:"usage/release",id:"usage/release",title:"release",description:"The release-plz release command releases all the unpublished packages.",source:"@site/docs/usage/release.md",sourceDirName:"usage",slug:"/usage/release",permalink:"/docs/usage/release",draft:!1,editUrl:"https://github.com/MarcoIeni/release-plz/tree/main/website/docs/usage/release.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"release-pr",permalink:"/docs/usage/release-pr"},next:{title:"Shell completion",permalink:"/docs/usage/shell-completion"}},s={},p=[{value:"Gitlab",id:"gitlab",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"release"},"release"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release")," command releases all the unpublished packages."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For example, let's say you have a workspace with two packages: ",(0,r.kt)("inlineCode",{parentName:"p"},"pkg-a"),"\n(version 0.3.1) and ",(0,r.kt)("inlineCode",{parentName:"p"},"pkg-b")," (version 0.2.2).\nThe crates.io registry contains ",(0,r.kt)("inlineCode",{parentName:"p"},"pkg-a")," version 0.3.1, but it doesn't contain\n",(0,r.kt)("inlineCode",{parentName:"p"},"pkg-b")," version 0.2.2 because you didn't publish this version yet.\nIn this case, release-plz would release ",(0,r.kt)("inlineCode",{parentName:"p"},"pkg-b"),".")),(0,r.kt)("p",null,"For every release, release-plz:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Creates a git tag named ",(0,r.kt)("inlineCode",{parentName:"li"},"<package_name>-v<version>")," (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"tokio-v1.8.1"),")."),(0,r.kt)("li",{parentName:"ul"},"Publishes the package to the cargo registry by running ",(0,r.kt)("inlineCode",{parentName:"li"},"cargo publish"),"."),(0,r.kt)("li",{parentName:"ul"},"Publishes a GitHub/Gitea release based on the git tag.")),(0,r.kt)("p",null,"In the tag name, ",(0,r.kt)("inlineCode",{parentName:"p"},"<package_name>-")," is omitted if there's only one\npackage to publish (i.e. with ",(0,r.kt)("inlineCode",{parentName:"p"},"publish != false")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," file)."),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release")," doesn't edit your ",(0,r.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," files and doesn't\npush new commits. It releases the packages as they are in your repository.\nFor this reason, you typically use the ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release")," command in the main branch\nafter you run ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz update"),"\nor you merge a pull request opened with ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release-pr"),"."),(0,r.kt)("p",null,"If all packages are already published, the ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release")," command does nothing."),(0,r.kt)("p",null,"To learn more, run ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release --help"),"."),(0,r.kt)("h2",{id:"gitlab"},"Gitlab"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"releases-plz")," also supports creating releases on Gitlab with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--backend gitlab")," option."),(0,r.kt)("p",null,"The default token in CI does not have permissions to create tags, so you will need to\na custom ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html"},"access token"),".\nThe permissions you need are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"api")," (to create a release)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"write_repository")," (to create tag)")),(0,r.kt)("p",null,"Then you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release")," in Gitlab CI with the following arguments:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"release-plz release --backend gitlab --git-token <gitlab application token>")))}m.isMDXComponent=!0}}]);